@model TreinamentoWeb.Models.Entity.branches

@{
    ViewBag.Title = Resources.Strings.newBranche;
}

@section JavaScripts
{
    <script>
        const RESOURCELINKS = {
            BRANCHES: "@Url.Action("Branches", "Branches")"
        };
    </script>
    @Scripts.Render("~/bundles/branches");
 }


<h2>@Resources.Strings.newBranche</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.merge_executed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.merge_executed)
                    @Html.ValidationMessageFor(model => model.merge_executed, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.parent_branch, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @*@Html.EditorFor(model => model.parent_branch, new { htmlAttributes = new { @class = "form-control" } }) *@ 
                @Html.DropDownListFor(model => model.parent_branch, Enumerable.Empty<SelectListItem>(), new { @class = "form-control select2" } )
                @Html.ValidationMessageFor(model => model.parent_branch, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.product, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.product, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.product, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@Resources.Strings.save class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    <a class="btn btn-default" href='@Url.Action("Index", "Branches")'>
        <span class="glyphicon glyphicon-chevron-left"></span>
    </a></div>